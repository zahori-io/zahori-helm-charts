name: Release Charts

on:
  push:
    branches:
      - master

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
                 
      - name: Add aerokube Helm repo
        run: |
          helm repo add aerokube https://charts.aerokube.com/

      - name: Add hashicorp Helm repo
        run: |
          helm repo add hashicorp https://helm.releases.hashicorp.com
          
      # - name: Add zahori Helm repo
      #   run: |
      #     helm repo add zahori https://zahori-io.github.io/zahori-helm-charts          

      - name: Update Helm repos
        run: |
          helm repo update
        
      - name: Update dependencies
        run: |
          for dir in ./charts/*; do
            [ -d "$dir" ] && helm dependency update "$dir"
          done

      - name: Import PGP Key
        run: |
          echo "${{ secrets.PGP_PRIVATE_KEY }}" | gpg --batch --yes --passphrase=${{ secrets.PGP_PASSPHRASE }} --import           
     
      # Optional step if GPG signing is used
      - name: Prepare GPG key
        run: |
          gpg_dir=.cr-gpg
          mkdir "$gpg_dir"
          keyring="$gpg_dir/secring.gpg"
          base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"
          passphrase_file="$gpg_dir/passphrase"
          echo "$GPG_PASSPHRASE" > "$passphrase_file"
          echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
          echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
        env:
          GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
          GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.TOKEN }}"
